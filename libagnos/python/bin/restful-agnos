#!/usr/bin/env python

##############################################################################
# Part of the Agnos RPC Framework
#    http://agnos.sourceforge.net
#
# Copyright 2011, International Business Machines Corp.
#                 Author: Tomer Filiba (tomerf@il.ibm.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################

import sys
import shlex
from optparse import OptionParser
from agnos.restful import RESTfulAgnosServer


parser = OptionParser()

parser.add_option("--bindaddr", dest="bindaddr", help="the address to bind to (default 0.0.0.0)", 
    default = "0.0.0.0", metavar="HOST")
parser.add_option("-p", "--port", dest="port", help="the port to bind to (required)", 
    metavar="PORT")
parser.add_option("-m", "--module", dest="modname", help="the bindings module to use (required)", 
    metavar="MODULE")

parser.add_option("--exec", dest="executable", help="the executable to spawn "
    "to pass arguments, simply surround the value with quotes, and separate "
    "the arguments with spaces", metavar="CMDLINE")
parser.add_option("--sock", dest="sock", help="the real server's listener socket. "
    "the format is host:port where host is either an IP address of a hostname, " 
    "and port is in the range of 1..65535", metavar="HOST:PORT")
parser.add_option("--url", dest="url", help="the real server's URL", metavar="URL")


if __name__ == "__main__":
    import sys
    (options, args) = parser.parse_args()
    
    if options.executable:
        executable = shlex.split(options.executable)
        server = RESTfulAgnosServer.connect_executable(options.modname, 
            executable[0], executable[1:])
    elif options.sock:
        host, port = options.sock.split(":")
        port = int(port)
        server = RESTfulAgnosServer.connect(options.modname, host, port) 
    elif options.url:
        server = RESTfulAgnosServer.connect_url(options.modname, options.url) 
    else:
        parser.error("invalid mode: must select one of 'exec', 'url', or 'sock'")

    server.start(options.bindaddr, int(options.port))





