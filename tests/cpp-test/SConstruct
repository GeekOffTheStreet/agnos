import os

Decider('MD5')

env = Environment(
    CPPDEFINES = {
        #"AGNOS_DEBUG" : None, 
    }, 
    CCFLAGS = "-Werror -g",
)

conf = Configure(env)
if conf.CheckCXXHeader('boost/process.hpp'):
    conf.env["CPPDEFINES"]["BOOST_PROCESS_SUPPORTED"] = None
env = conf.Finish()

SConscript(["../../libagnos/cpp/SConstruct"], exports="env")

agnos_outdir = "bindings"
client_bindings = os.path.join(agnos_outdir, "FeatureTest_client_bindings.cpp")
server_bindings = os.path.join(agnos_outdir, "FeatureTest_server_bindings.cpp")

def build_agnos(target, source, env):
    from agnos_compiler import compile
    from agnos_compiler.targets import CPPTarget
    compile(source[0].path, CPPTarget(agnos_outdir))

env.Command([client_bindings, server_bindings], "../features.xml", build_agnos)

Depends(client_bindings, '../../compiler/src/agnos_compiler/targets/cpp.py')
Depends(server_bindings, '../../compiler/src/agnos_compiler/targets/cpp.py')

env.Program('myserver', 
    [server_bindings, "src/myserver.cpp"], 
    CCFLAGS = "-Werror",
    CPPPATH = ['../../libagnos/cpp/src'],
    LIBPATH = ['../../libagnos/cpp'],
    LIBS = ["agnos", "boost_thread", "boost_date_time", "boost_iostreams", "boost_system"],
)

env.Program('myclient', 
    [client_bindings, "src/myclient.cpp"], 
    CPPPATH = ['../../libagnos/cpp/src'],
    LIBPATH = ['../../libagnos/cpp'],
    LIBS = ["agnos", "boost_thread", "boost_date_time", "boost_iostreams", "boost_system"],
)

env.Program('performance-test', 
    [client_bindings, "src/performance-test.cpp"], 
    CPPPATH = ['../../libagnos/cpp/src'],
    LIBPATH = ['../../libagnos/cpp'],
    LIBS = ["agnos", "boost_thread", "boost_date_time", "boost_iostreams", "boost_system"],
)
